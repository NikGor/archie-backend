"""

Revision ID: 4a6ebffe0f74
Revises: d3bd9f810a99
Create Date: 2025-10-06 21:31:48.884131

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import Text
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4a6ebffe0f74'
down_revision: Union[str, Sequence[str], None] = 'd3bd9f810a99'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_assistant_conversation',
    sa.Column('conversation_id', sa.String(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('total_input_tokens', sa.Integer(), nullable=False),
    sa.Column('total_output_tokens', sa.Integer(), nullable=False),
    sa.Column('total_tokens', sa.Integer(), nullable=False),
    sa.Column('total_cost', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.PrimaryKeyConstraint('conversation_id')
    )
    op.create_table('ai_assistant_message',
    sa.Column('message_id', sa.String(), nullable=False),
    sa.Column('conversation_id', sa.String(), nullable=False),
    sa.Column('role', sa.Text(), nullable=False),
    sa.Column('text_format', sa.Text(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('metadata_json', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('previous_message_id', sa.String(), nullable=True),
    sa.Column('model', sa.Text(), nullable=True),
    sa.Column('llm_model', sa.Text(), nullable=True),
    sa.Column('llm_trace', postgresql.JSONB(astext_type=Text()), nullable=True),
    sa.Column('input_tokens', sa.Integer(), nullable=True),
    sa.Column('input_cached_tokens', sa.Integer(), nullable=False),
    sa.Column('output_tokens', sa.Integer(), nullable=True),
    sa.Column('output_reasoning_tokens', sa.Integer(), nullable=False),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('total_cost', sa.Numeric(precision=10, scale=6), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['ai_assistant_conversation.conversation_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.drop_table('messages')
    op.drop_table('conversations')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conversations',
    sa.Column('conversation_id', sa.VARCHAR(), nullable=False),
    sa.Column('title', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('llm_trace', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('conversation_id')
    )
    op.create_table('messages',
    sa.Column('message_id', sa.VARCHAR(), nullable=False),
    sa.Column('conversation_id', sa.VARCHAR(), nullable=False),
    sa.Column('role', sa.VARCHAR(), nullable=False),
    sa.Column('text_format', sa.VARCHAR(), nullable=False),
    sa.Column('text', sa.TEXT(), nullable=False),
    sa.Column('message_metadata', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('llm_trace', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.conversation_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.drop_table('ai_assistant_message')
    op.drop_table('ai_assistant_conversation')
    # ### end Alembic commands ###
